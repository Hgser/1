management:
  port: 8084
  security:
    enable: flase



# 端口
server:
  port: 8083

#spring:
#  profiles:
#    # 指定配置
#    # route_simple：简单尝试
#    # route_stripPrefix：截取请求
#    # route_uri：转发指定地址并传入参数
#    # route_addRequestParameter：转发指定服务并传入参数
#    # route_hystrix：熔断
#    # route_requestRateLimiter：限流
#    # route_all：综合
#    active: route_simple
#
#---

spring:
  # 配置文件名称，用来标识不同环境的配置。由 spring.profiles.active 的值来决定使用哪组配置。
  ## 简单尝试
  #  profiles: route_simple
  application:
    # 应用名称
    name: gateway
  cloud:
    gateway:
      discovery:
        locator:
          # 是否和服务注册与发现组件结合，设置为 true 后可以直接使用应用名称调用服务
          enabled: true
      # 路由（routes：路由，它由唯一标识（ID）、目标服务地址（uri）、一组断言（predicates）和一组过滤器组成（filters）。filters 不是必需参数。）
      routes:
        # 路由标识（id：标识，具有唯一性）   简单尝试
        - id: route_simple
          # 目标服务地址（uri：地址，请求转发后的地址）
          uri: http://localhost:8001/port
          # 路由条件（predicates：断言，匹配 HTTP 请求内容）
          predicates:
            ## 转发地址格式为 uri/archive
            - Path=/1
        #            记住，要用网关地址调用这个。
        - id: customer2
          uri: http://localhost:8002/hi
          predicates:
            - Path=/2
        - id: customer2
          uri: http://localhost:8002/receive
          predicates:
            - Path=/receive
        - id: customer2
          uri: http://localhost:8001/send
          predicates:
            - Path=/send
eureka:
  instance:
    #renew时间
    lease-renewal-interval-in-seconds=30:
    # 使用 ip 代替实例名
    prefer-ip-address: true
    # 实例的主机名
    hostname: ${spring.cloud.client.ip-address}
    # 实例的 ID 规则
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
  client:
    serviceUrl:
      # 注册中心地址
      defaultZone: http://localhost:8081/eureka/ #注册中心地址


#      好吧，至此，网关也完成了。之后是，加熔断还是继续样例？看看把东西搬进服务器里吧。
#注册完一次的服务，会被永远记住，怎么处理

#spring:
#  cloud:
#    gateway:
#      discovery:
#        locator:
#          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
#      routes:
#        - id: payment_routh1
#          #uri: http://localhost:8001     #静态，写死了地址，只能调用一个服务
#          uri: lb://CLOUD-PAYMENT-SERVICE #动态，lb://微服务名
#          predicates:
#            - Path=/payment/get/**
#        - id: payment_routh2
#          #uri: http://localhost:8001
#          uri: lb://CLOUD-PAYMENT-SERVICE
#          predicates:
#            - Path=/payment/lb/**